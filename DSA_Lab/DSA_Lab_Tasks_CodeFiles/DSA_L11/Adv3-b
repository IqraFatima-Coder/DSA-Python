
def interpolation_search(arr, key): 
    low = 0 
    high = len(arr) - 1 
    while low <= high and arr[low] <= key <= arr[high]: 
        pos = low + ((key - arr[low]) * (high - low) // (arr[high] - arr[low])) 
        if arr[pos] == key: 
            return pos 
        elif arr[pos] < key: 
            low = pos + 1 
        else: 
            high = pos - 1 
    return -1 
arr = [10, 20, 30, 40, 50]
key = 40
print(interpolation_search(arr, key))  # Expected Output: 2
non_uniform_data = [1, 3, 7, 50, 200, 1000, 5000, 10000]  # Random gaps
key = 5000

# Search using interpolation
print("Interpolation search index:", interpolation_search(non_uniform_data, key))

# Search using binary
print("Binary search index:", binary_search(non_uniform_data, key))
